/*
** switch function to know if front is in a todo modification process
** I prefer using this way instead of a global variable, not sure that is
** prettier but well, we'll see.
*/
const isThereModifying = (function (pBool)
{
	let myStaticVar = false;
	
	return function (pBool) {
	    //if there is a parameter passed in the function, we give it the new value, else, it keep its value
		if(typeof (pBool) === typeof (false)) {
			myStaticVar = pBool;
		}
		
		return (myStaticVar);
	};
})();

function selectAddEntryInput() {
	$('#add_entry_input').select();
}

function getTodoListFromServerNDo(pFunction) {
	let retTodoList = [];

	$.post('/getTodoList', function (data) {
		pFunction(data.todoList);
	})

	return retTodoList;
}

function loadTodoListInDOM(pTodoList) {
	for (let i = 0; i < pTodoList.length; i++) {
		$("ul#todo_list").append('<li class="todo" id="todo_' + i + '"><span>' + pTodoList[i] +'</span><button class="del_button" id="del_' + i + '" title="Supprimer">X</button><button class="mod_button" id="mod_' + i + '" title="Modifier">M</button></li>');
	}

	setEventsButtons();
}

function clearTodoListInDOM() {
	$('ul#todo_list').empty();
}

function reLoadTodoListInDOM(pTodoList) {
	clearTodoListInDOM();
	loadTodoListInDOM(pTodoList);
	selectAddEntryInput();
}

function setEventsDelButtons() {
	$('button.del_button').each(function () {
		this.addEventListener('click', function () {
			//post delete
			$.post('/delTodo/', {id : this.id.slice(4)});

			//reload
			getTodoListFromServerNDo(reLoadTodoListInDOM);
		});
	});
}


function setEventsModButtons() { 
	$('button.mod_button').each(function () {
		this.addEventListener('click', function (e) {
			//window.location.href = '/modTodo/' + e.currentTarget.id.slice(4);
			let id = this.id.slice(4);
			let spanTodo = 	$('li#todo_' + id + ' span');
			let formReplace = $('<form method="post" action="/"><input type="text" name="todoValue" value="' + spanTodo.text() + '" placeholder="(80 caractÃ¨res maximum)" maxlength="80" required /><input type="submit" value="OK" title="Valider" /><button title="Annuler">NO</button></form>');

			$('li#todo_' + id + ' button.mod_button').remove();
			$('li#todo_' + id + ' button.del_button').remove();
			spanTodo.replaceWith(formReplace);
			$('li#todo_' + id + ' input[type=text]').select();
			$('li#todo_' + id + ' button').click(function (e) {
				e.preventDefault();
				getTodoListFromServerNDo(reLoadTodoListInDOM);
			});

			$('li#todo_' + id + ' form').on('submit', function (e) {
				e.preventDefault();
				$.post('/modTodo/', {todoValue: $('li#todo_' + id + 'input[type=text]').val(), todoId: id});
				getTodoListFromServerNDo(reLoadTodoListInDOM);
			})
		});	
	});
}

function setEventsButtons() {
	setEventsDelButtons();
	setEventsModButtons();
}

$(function () {
	getTodoListFromServerNDo(loadTodoListInDOM);

	//Focus on input#add_entry_input
	selectAddEntryInput();
	//Manage the validation form
	$('form').on('submit', function (e) {
		e.preventDefault();
		$.post('/addTodo', {todo_input : $('input#add_entry_input').val()});
		$('input#add_entry_input').val('');
		getTodoListFromServerNDo(reLoadTodoListInDOM);
		selectAddEntryInput();
	})
})
